plugins {
    id 'application'
    id 'com.github.spotbugs' version '5.0.6'
    id 'checkstyle'
    id 'org.owasp.dependencycheck' version '7.0.0'
    id 'org.springframework.boot' version '2.6.4'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    springBootVersion = '2.6.4'
}

dependencies {
    // Test libraries
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.8.1"
    testImplementation "org.mockito:mockito-core:2.21.0"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    // This dependency is used by the application.
    implementation "com.google.guava:guava:30.1.1-jre"

    // Spotbugs
    compileOnly "com.github.spotbugs:spotbugs-annotations:4.6.0"

    // Spring dependencies
    implementation "org.springframework:spring-context:5.3.16"

    // SpringBoot dependencies
    implementation "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-integration:2.6.3"
    implementation "org.springframework.integration:spring-integration-ip:5.5.9"
    implementation "org.springframework.boot:spring-boot-starter-logging:${springBootVersion}"

    // Metrics
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "io.micrometer:micrometer-registry-datadog:1.8.3"
    
}

application {
    // Define the main class for the application.
    mainClass = 'com.github.xba1k.CANDog.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('bootJar') {
    dependsOn 'test'
}

tasks.named('bootJar') {
    dependsOn 'checkstyleMain'
    dependsOn 'spotbugsMain'
    dependsOn 'dependencyCheckAnalyze'
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
}

dependencyCheck {
    failBuildOnCVSS 4
    suppressionFile "${projectDir}/../config/dependency_suppressions.xml"
}
